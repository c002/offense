import nmap
import smtplib
from email.MIMEMultipart import MIMEMultipart
from email.MIMEText import MIMEText

#######################################################
# Script for enumerating outbound ports on a network. 
# Add to /etc/rc.local on your pi
# Need to update gmail un/pw for email results to work
# Results are also saved locally if email port not open
# Still a work in progress, will add logic for what to do if
# smtp is not open to gmail. 
#######################################################


def main():
    target_ip = 'egadz.metasploit.com'
    scan_results = PortScanner(target_ip)
    for ip in scan_results['scan']:
        scanned_ip = ip
    email_contents = 'The following tcp ports are open open outbound for this network : \n\n' 
    for port in scan_results['scan'][scanned_ip]['tcp']:
        email_contents += str(port) + '\n'
    sendnotificationmail(scan_results,email_contents)
        
def sendnotificationmail(scan_results,email_contents):
    gmail_user = ''
    gmail_password = ''
    to_email = ''
    # create message object
    msg = MIMEMultipart()
    # fill in all the normal email parts
    msg['Subject'] = "The Kali PI Has Connected to a New Network"
    msg['From'] = gmail_user
    msg['To'] = to_email
    SERVER = "smtp.gmail.com:465"
    # resultsFile = file(scanResults)
    # attachment = MIMEText(resultsFile.read())
    # attachment.add_header('Content-Disposition', 'attachment', filename=scanResults)
    body = email_contents
    msg.attach(MIMEText(body))
    # attach human-readable scan results
    # msg.attach(attachment)
    server = smtplib.SMTP_SSL(SERVER)
    server.ehlo()
    server.login(gmail_user , gmail_password)
    server.sendmail(msg['From'], msg['To'], msg.as_string())
    server.quit()
    
def PortScanner(ip):
    print 'Starting nmap outbound port scan scan....'
    nm = nmap.PortScanner()
    scan_results = nm.scan(str(ip), arguments = '-p- -oN outbound-ports')
    return scan_results

main()
